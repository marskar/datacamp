# Creating Robust Python Projects

## Chapter 1: Beyond `.py` scripts: Python projects are more than just code files!

* Lesson 1.1 - Python project principles
    * Learning objective: Understand modularization, i.e. why split up code into modules? Python `import` statement, code reusability, avoiding monolith programs, e.g. a single Jupyter notebook with all code and documentation.
    * Learning objective: Understand packaging, i.e. why distribute data science projects in the form of packages? Sharing code, reproducibility, projects will not gain traction unless the code is easily available and well documented, popular projects can inspire others to contribute.
    * Learning objective: Understand the Python packaging ecosystem, i.e. how can my code fit into the grander scheme of things? PyPI and pip (with a nod to conda-forge and conda), dependency management (requirements.txt), virtual environments (pipenv)


* Lesson 1.2 - Introduction to a typical Python project
    * Learning objective: Understand the structure of a typical Python project, i.e. how can my code fit into the grander scheme of things? PyPI and pip (with a nod to conda-forge and conda), dependency management (requirements.txt), virtual environments (pipenv)
    - mod1.py
    - mod2.py
    - setup.py
    - requirements.txt

  * requirements.txt
  * Exploratory data analysis
  * What type of models are appropriate?
* Lesson 1.3 - Training and evaluating models
  * Splitting data into training and testing sets
  * Training a model
  * Evaluating the model

## Chapter 2: Get out the vote

* Lesson 2.1 - Voter attitudes and turnout
  * Exploratory data analysis
  * What types of models are appropriate?
* Lesson 2.2 - Training models
  * Logistic regression
  * glmnet
  * Random forest
* Lesson 2.3 - Evaluating your models
  * ROC and AUC

## Chapter 3: Essential copying and pasting from Stack Overflow

* Lesson 3.1 - Stack Overflow Developer Survey
  * Exploratory data analysis
  * What types of models are appropriate?
* Lesson 3.2 - Imputation for missing values
  * Preparing for modeling
* Lesson 3.3 - Training models
  * Logistic regression
  * Random forest
* Lesson 3.4 - Evaluating your models
  * ROC and AUC

## Chapter 4: But what do the nuns think?

* Lesson 4.1 - Survey of Catholic nuns in 1963
  * Exploratory data analysis
  * What types of models are appropriate?
* Lesson 4.2 - Highly correlated variables
  * Preparing for modeling
* Lesson 4.3 - Training models
  * Linear regression
  * Random forest
  * (maybe will try gbm?)
* Lesson 4.4 - Evaluating your models
  * RMSE


